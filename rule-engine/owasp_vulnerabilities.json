{
  "summary": {
    "totalFindings": 74,
    "severityBreakdown": {
      "MEDIUM": 19,
      "HIGH": 37,
      "CRITICAL": 12,
      "LOW": 6
    },
    "owaspCategoryBreakdown": {
      "A03:2021": 19,
      "A01:2021": 6,
      "A02:2021": 7,
      "A04:2021": 6,
      "A05:2021": 6,
      "A06:2021": 6,
      "A07:2021": 6,
      "A08:2021": 6,
      "A09:2021": 6,
      "A10:2021": 6
    }
  },
  "findings": [
    {
      "ruleId": "OWASP-A03-001",
      "name": "SQL Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input directly concatenated into SQL queries",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Use parameterized queries or prepared statements. Implement input validation and SQL injection prevention measures.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A03-003",
      "name": "Command Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input used in system commands without sanitization",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Validate and sanitize all user input. Use whitelisting for allowed commands. Consider safer alternatives to system commands.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A03-001",
      "name": "SQL Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input directly concatenated into SQL queries",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Use parameterized queries or prepared statements. Implement input validation and SQL injection prevention measures.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A03-003",
      "name": "Command Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input used in system commands without sanitization",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Validate and sanitize all user input. Use whitelisting for allowed commands. Consider safer alternatives to system commands.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A03-001",
      "name": "SQL Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input directly concatenated into SQL queries",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Use parameterized queries or prepared statements. Implement input validation and SQL injection prevention measures.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A03-003",
      "name": "Command Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input used in system commands without sanitization",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Validate and sanitize all user input. Use whitelisting for allowed commands. Consider safer alternatives to system commands.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A03-001",
      "name": "SQL Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input directly concatenated into SQL queries",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Use parameterized queries or prepared statements. Implement input validation and SQL injection prevention measures.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A03-003",
      "name": "Command Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input used in system commands without sanitization",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Validate and sanitize all user input. Use whitelisting for allowed commands. Consider safer alternatives to system commands.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A03-001",
      "name": "SQL Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input directly concatenated into SQL queries",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Use parameterized queries or prepared statements. Implement input validation and SQL injection prevention measures.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A03-003",
      "name": "Command Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input used in system commands without sanitization",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Validate and sanitize all user input. Use whitelisting for allowed commands. Consider safer alternatives to system commands.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A03-001",
      "name": "SQL Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input directly concatenated into SQL queries",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Use parameterized queries or prepared statements. Implement input validation and SQL injection prevention measures.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A03-003",
      "name": "Command Injection",
      "owaspCategory": "A03:2021",
      "severity": "CRITICAL",
      "description": "User input used in system commands without sanitization",
      "confidence": 0.5,
      "riskScore": 5.0,
      "remediation": "Validate and sanitize all user input. Use whitelisting for allowed commands. Consider safer alternatives to system commands.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.7,
      "riskScore": 4.9,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.7,
      "riskScore": 4.9,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.7,
      "riskScore": 4.9,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: warn",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.7,
      "riskScore": 4.9,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.7,
      "riskScore": 4.9,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: warn",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.6,
      "riskScore": 4.2,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: println",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 1.0,
      "riskScore": 4.0,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 1.0,
      "riskScore": 4.0,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 1.0,
      "riskScore": 4.0,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: warn",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 1.0,
      "riskScore": 4.0,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 1.0,
      "riskScore": 4.0,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: warn",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A02-001",
      "name": "Sensitive Data in Logs",
      "owaspCategory": "A02:2021",
      "severity": "HIGH",
      "description": "Sensitive data exposed through logging without encryption",
      "confidence": 0.56,
      "riskScore": 3.92,
      "remediation": "Encrypt or hash sensitive data before logging. Implement data classification and masking policies.",
      "matchReasons": [
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 3,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 0.9,
      "riskScore": 3.6,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: println",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A01-001",
      "name": "Missing Authorization Check",
      "owaspCategory": "A01:2021",
      "severity": "HIGH",
      "description": "Direct access to sensitive operations without authorization validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Implement authorization checks before sensitive operations. Use role-based access control.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A06-001",
      "name": "Unsafe Deserialization",
      "owaspCategory": "A06:2021",
      "severity": "HIGH",
      "description": "User input used in deserialization without validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and sanitize input before deserialization. Use safe deserialization libraries.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A07-001",
      "name": "Weak Password Handling",
      "owaspCategory": "A07:2021",
      "severity": "HIGH",
      "description": "Password handled without proper hashing or encryption",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Use secure password hashing (e.g., bcrypt, Argon2). Avoid storing plain-text passwords.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A08-001",
      "name": "Unsigned Code Execution",
      "owaspCategory": "A08:2021",
      "severity": "HIGH",
      "description": "Dynamic code execution from untrusted sources",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Avoid dynamic code execution. Validate and sanitize all inputs used in code execution.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A10-001",
      "name": "Server-Side Request Forgery",
      "owaspCategory": "A10:2021",
      "severity": "HIGH",
      "description": "User-controlled URLs used in server-side requests",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and whitelist URLs for server-side requests. Implement network-level protections.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A01-001",
      "name": "Missing Authorization Check",
      "owaspCategory": "A01:2021",
      "severity": "HIGH",
      "description": "Direct access to sensitive operations without authorization validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Implement authorization checks before sensitive operations. Use role-based access control.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A06-001",
      "name": "Unsafe Deserialization",
      "owaspCategory": "A06:2021",
      "severity": "HIGH",
      "description": "User input used in deserialization without validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and sanitize input before deserialization. Use safe deserialization libraries.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A07-001",
      "name": "Weak Password Handling",
      "owaspCategory": "A07:2021",
      "severity": "HIGH",
      "description": "Password handled without proper hashing or encryption",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Use secure password hashing (e.g., bcrypt, Argon2). Avoid storing plain-text passwords.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A08-001",
      "name": "Unsigned Code Execution",
      "owaspCategory": "A08:2021",
      "severity": "HIGH",
      "description": "Dynamic code execution from untrusted sources",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Avoid dynamic code execution. Validate and sanitize all inputs used in code execution.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A10-001",
      "name": "Server-Side Request Forgery",
      "owaspCategory": "A10:2021",
      "severity": "HIGH",
      "description": "User-controlled URLs used in server-side requests",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and whitelist URLs for server-side requests. Implement network-level protections.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A01-001",
      "name": "Missing Authorization Check",
      "owaspCategory": "A01:2021",
      "severity": "HIGH",
      "description": "Direct access to sensitive operations without authorization validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Implement authorization checks before sensitive operations. Use role-based access control.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A06-001",
      "name": "Unsafe Deserialization",
      "owaspCategory": "A06:2021",
      "severity": "HIGH",
      "description": "User input used in deserialization without validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and sanitize input before deserialization. Use safe deserialization libraries.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A07-001",
      "name": "Weak Password Handling",
      "owaspCategory": "A07:2021",
      "severity": "HIGH",
      "description": "Password handled without proper hashing or encryption",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Use secure password hashing (e.g., bcrypt, Argon2). Avoid storing plain-text passwords.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A08-001",
      "name": "Unsigned Code Execution",
      "owaspCategory": "A08:2021",
      "severity": "HIGH",
      "description": "Dynamic code execution from untrusted sources",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Avoid dynamic code execution. Validate and sanitize all inputs used in code execution.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A10-001",
      "name": "Server-Side Request Forgery",
      "owaspCategory": "A10:2021",
      "severity": "HIGH",
      "description": "User-controlled URLs used in server-side requests",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and whitelist URLs for server-side requests. Implement network-level protections.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A01-001",
      "name": "Missing Authorization Check",
      "owaspCategory": "A01:2021",
      "severity": "HIGH",
      "description": "Direct access to sensitive operations without authorization validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Implement authorization checks before sensitive operations. Use role-based access control.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A06-001",
      "name": "Unsafe Deserialization",
      "owaspCategory": "A06:2021",
      "severity": "HIGH",
      "description": "User input used in deserialization without validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and sanitize input before deserialization. Use safe deserialization libraries.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A07-001",
      "name": "Weak Password Handling",
      "owaspCategory": "A07:2021",
      "severity": "HIGH",
      "description": "Password handled without proper hashing or encryption",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Use secure password hashing (e.g., bcrypt, Argon2). Avoid storing plain-text passwords.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A08-001",
      "name": "Unsigned Code Execution",
      "owaspCategory": "A08:2021",
      "severity": "HIGH",
      "description": "Dynamic code execution from untrusted sources",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Avoid dynamic code execution. Validate and sanitize all inputs used in code execution.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A10-001",
      "name": "Server-Side Request Forgery",
      "owaspCategory": "A10:2021",
      "severity": "HIGH",
      "description": "User-controlled URLs used in server-side requests",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and whitelist URLs for server-side requests. Implement network-level protections.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A01-001",
      "name": "Missing Authorization Check",
      "owaspCategory": "A01:2021",
      "severity": "HIGH",
      "description": "Direct access to sensitive operations without authorization validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Implement authorization checks before sensitive operations. Use role-based access control.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A06-001",
      "name": "Unsafe Deserialization",
      "owaspCategory": "A06:2021",
      "severity": "HIGH",
      "description": "User input used in deserialization without validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and sanitize input before deserialization. Use safe deserialization libraries.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A07-001",
      "name": "Weak Password Handling",
      "owaspCategory": "A07:2021",
      "severity": "HIGH",
      "description": "Password handled without proper hashing or encryption",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Use secure password hashing (e.g., bcrypt, Argon2). Avoid storing plain-text passwords.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A08-001",
      "name": "Unsigned Code Execution",
      "owaspCategory": "A08:2021",
      "severity": "HIGH",
      "description": "Dynamic code execution from untrusted sources",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Avoid dynamic code execution. Validate and sanitize all inputs used in code execution.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A10-001",
      "name": "Server-Side Request Forgery",
      "owaspCategory": "A10:2021",
      "severity": "HIGH",
      "description": "User-controlled URLs used in server-side requests",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and whitelist URLs for server-side requests. Implement network-level protections.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A01-001",
      "name": "Missing Authorization Check",
      "owaspCategory": "A01:2021",
      "severity": "HIGH",
      "description": "Direct access to sensitive operations without authorization validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Implement authorization checks before sensitive operations. Use role-based access control.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A06-001",
      "name": "Unsafe Deserialization",
      "owaspCategory": "A06:2021",
      "severity": "HIGH",
      "description": "User input used in deserialization without validation",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and sanitize input before deserialization. Use safe deserialization libraries.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A07-001",
      "name": "Weak Password Handling",
      "owaspCategory": "A07:2021",
      "severity": "HIGH",
      "description": "Password handled without proper hashing or encryption",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Use secure password hashing (e.g., bcrypt, Argon2). Avoid storing plain-text passwords.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A08-001",
      "name": "Unsigned Code Execution",
      "owaspCategory": "A08:2021",
      "severity": "HIGH",
      "description": "Dynamic code execution from untrusted sources",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Avoid dynamic code execution. Validate and sanitize all inputs used in code execution.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A10-001",
      "name": "Server-Side Request Forgery",
      "owaspCategory": "A10:2021",
      "severity": "HIGH",
      "description": "User-controlled URLs used in server-side requests",
      "confidence": 0.5,
      "riskScore": 3.5,
      "remediation": "Validate and whitelist URLs for server-side requests. Implement network-level protections.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A03-002",
      "name": "Log Injection/Forging",
      "owaspCategory": "A03:2021",
      "severity": "MEDIUM",
      "description": "Unsanitized user input in log statements can lead to log injection",
      "confidence": 0.6,
      "riskScore": 2.4,
      "remediation": "Sanitize user input before logging. Use structured logging with parameterized messages. Consider excluding sensitive data from logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink name matches: info",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "filePath",
        "sinkName": "info",
        "pathLength": 4,
        "vulnerability": "Potential taint flow from filePath to info"
      }
    },
    {
      "ruleId": "OWASP-A05-001",
      "name": "Debug Information Exposure",
      "owaspCategory": "A05:2021",
      "severity": "MEDIUM",
      "description": "Sensitive debug information exposed in production logs",
      "confidence": 0.6,
      "riskScore": 2.4,
      "remediation": "Disable debug logging in production. Mask sensitive information in logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A05-001",
      "name": "Debug Information Exposure",
      "owaspCategory": "A05:2021",
      "severity": "MEDIUM",
      "description": "Sensitive debug information exposed in production logs",
      "confidence": 0.6,
      "riskScore": 2.4,
      "remediation": "Disable debug logging in production. Mask sensitive information in logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A05-001",
      "name": "Debug Information Exposure",
      "owaspCategory": "A05:2021",
      "severity": "MEDIUM",
      "description": "Sensitive debug information exposed in production logs",
      "confidence": 0.6,
      "riskScore": 2.4,
      "remediation": "Disable debug logging in production. Mask sensitive information in logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A05-001",
      "name": "Debug Information Exposure",
      "owaspCategory": "A05:2021",
      "severity": "MEDIUM",
      "description": "Sensitive debug information exposed in production logs",
      "confidence": 0.6,
      "riskScore": 2.4,
      "remediation": "Disable debug logging in production. Mask sensitive information in logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A05-001",
      "name": "Debug Information Exposure",
      "owaspCategory": "A05:2021",
      "severity": "MEDIUM",
      "description": "Sensitive debug information exposed in production logs",
      "confidence": 0.6,
      "riskScore": 2.4,
      "remediation": "Disable debug logging in production. Mask sensitive information in logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL",
        "Sink scope matches: logger"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A04-001",
      "name": "Missing Input Validation",
      "owaspCategory": "A04:2021",
      "severity": "MEDIUM",
      "description": "Critical operations performed without proper input validation",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Implement robust input validation for all user inputs. Use whitelisting where possible.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A05-001",
      "name": "Debug Information Exposure",
      "owaspCategory": "A05:2021",
      "severity": "MEDIUM",
      "description": "Sensitive debug information exposed in production logs",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Disable debug logging in production. Mask sensitive information in logs.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A04-001",
      "name": "Missing Input Validation",
      "owaspCategory": "A04:2021",
      "severity": "MEDIUM",
      "description": "Critical operations performed without proper input validation",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Implement robust input validation for all user inputs. Use whitelisting where possible.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A04-001",
      "name": "Missing Input Validation",
      "owaspCategory": "A04:2021",
      "severity": "MEDIUM",
      "description": "Critical operations performed without proper input validation",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Implement robust input validation for all user inputs. Use whitelisting where possible.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A04-001",
      "name": "Missing Input Validation",
      "owaspCategory": "A04:2021",
      "severity": "MEDIUM",
      "description": "Critical operations performed without proper input validation",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Implement robust input validation for all user inputs. Use whitelisting where possible.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A04-001",
      "name": "Missing Input Validation",
      "owaspCategory": "A04:2021",
      "severity": "MEDIUM",
      "description": "Critical operations performed without proper input validation",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Implement robust input validation for all user inputs. Use whitelisting where possible.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A04-001",
      "name": "Missing Input Validation",
      "owaspCategory": "A04:2021",
      "severity": "MEDIUM",
      "description": "Critical operations performed without proper input validation",
      "confidence": 0.5,
      "riskScore": 2.0,
      "remediation": "Implement robust input validation for all user inputs. Use whitelisting where possible.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    },
    {
      "ruleId": "OWASP-A09-001",
      "name": "Insufficient Security Logging",
      "owaspCategory": "A09:2021",
      "severity": "LOW",
      "description": "Security-sensitive operations without proper logging",
      "confidence": 0.5,
      "riskScore": 0.5,
      "remediation": "Implement comprehensive security logging for sensitive operations. Ensure logs are tamper-proof.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "content",
        "sinkName": "println",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from content to println"
      }
    },
    {
      "ruleId": "OWASP-A09-001",
      "name": "Insufficient Security Logging",
      "owaspCategory": "A09:2021",
      "severity": "LOW",
      "description": "Security-sensitive operations without proper logging",
      "confidence": 0.5,
      "riskScore": 0.5,
      "remediation": "Implement comprehensive security logging for sensitive operations. Ensure logs are tamper-proof.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "userInput",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from userInput to info"
      }
    },
    {
      "ruleId": "OWASP-A09-001",
      "name": "Insufficient Security Logging",
      "owaspCategory": "A09:2021",
      "severity": "LOW",
      "description": "Security-sensitive operations without proper logging",
      "confidence": 0.5,
      "riskScore": 0.5,
      "remediation": "Implement comprehensive security logging for sensitive operations. Ensure logs are tamper-proof.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to info"
      }
    },
    {
      "ruleId": "OWASP-A09-001",
      "name": "Insufficient Security Logging",
      "owaspCategory": "A09:2021",
      "severity": "LOW",
      "description": "Security-sensitive operations without proper logging",
      "confidence": 0.5,
      "riskScore": 0.5,
      "remediation": "Implement comprehensive security logging for sensitive operations. Ensure logs are tamper-proof.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "input",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from input to warning"
      }
    },
    {
      "ruleId": "OWASP-A09-001",
      "name": "Insufficient Security Logging",
      "owaspCategory": "A09:2021",
      "severity": "LOW",
      "description": "Security-sensitive operations without proper logging",
      "confidence": 0.5,
      "riskScore": 0.5,
      "remediation": "Implement comprehensive security logging for sensitive operations. Ensure logs are tamper-proof.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "info",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to info"
      }
    },
    {
      "ruleId": "OWASP-A09-001",
      "name": "Insufficient Security Logging",
      "owaspCategory": "A09:2021",
      "severity": "LOW",
      "description": "Security-sensitive operations without proper logging",
      "confidence": 0.5,
      "riskScore": 0.5,
      "remediation": "Implement comprehensive security logging for sensitive operations. Ensure logs are tamper-proof.",
      "matchReasons": [
        "Source type matches: PARAMETER",
        "Sink type matches: METHOD_CALL"
      ],
      "taintPath": {
        "sourceName": "data",
        "sinkName": "warning",
        "pathLength": 2,
        "vulnerability": "Potential taint flow from data to warning"
      }
    }
  ],
  "timestamp": 1749070731858,
  "analyzer": "Python Rule Engine v1.0"
}